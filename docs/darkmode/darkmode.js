// Generated by Haxe 4.0.5
(function ($global) { "use strict";
class Darkmode {
	constructor() {
		this.localStorage = false;
		this.isLightMode = false;
		this.isDarkMode = false;
		this.dbname = "isDarkmode";
		this.isDarkMode = window.matchMedia("(prefers-color-scheme: dark)").matches;
		this.isLightMode = window.matchMedia("(prefers-color-scheme: light)").matches;
		window.console.group("possible value for darkmode");
		window.console.debug("isDarkMode: " + Std.string(this.isDarkMode));
		window.console.debug("isLightMode: " + Std.string(this.isLightMode));
		window.console.debug("localStorage: " + Std.string(this.get_localStorage()));
		window.console.groupEnd();
		var _gthis = this;
		window.document.addEventListener("DOMContentLoaded",function(event) {
			window.console.log("Darkmode - Dom ready");
			_gthis.setColorScheme();
			_gthis.setElements();
		});
	}
	setColorScheme() {
		if(this.get_localStorage() != null) {
			if(this.get_localStorage()) {
				this.activateDarkMode();
			}
			return;
		}
		if(!this.isDarkMode && !this.isLightMode) {
			var hour = new Date().getHours();
			if(hour < 5 || hour >= 17) {
				this.activateDarkMode();
			}
		}
		if(this.isDarkMode) {
			this.activateDarkMode();
		}
	}
	setElements() {
		var btn = window.document.getElementById("btn-darkmode");
		var _gthis = this;
		btn.onclick = function() {
			_gthis.activateDarkMode();
			return;
		};
	}
	activateDarkMode() {
		window.document.body.classList.toggle("darkmode");
		if(window.document.body.classList.contains("darkmode")) {
			this.set_localStorage(true);
		} else {
			this.set_localStorage(false);
		}
	}
	get_localStorage() {
		var temp = window.localStorage.getItem(this.dbname);
		this.set_localStorage(temp == "true");
		return this.localStorage;
	}
	set_localStorage(value) {
		window.localStorage.setItem(this.dbname,value == null ? "null" : "" + value);
		return this.localStorage = value;
	}
	static main() {
		var app = new Darkmode();
	}
}
Darkmode.__name__ = true;
Object.assign(Darkmode.prototype, {
	__class__: Darkmode
});
Math.__name__ = true;
class Std {
	static string(s) {
		return js_Boot.__string_rec(s,"");
	}
}
Std.__name__ = true;
class js__$Boot_HaxeError extends Error {
	constructor(val) {
		super();
		this.val = val;
		if(Error.captureStackTrace) {
			Error.captureStackTrace(this,js__$Boot_HaxeError);
		}
	}
}
js__$Boot_HaxeError.__name__ = true;
Object.assign(js__$Boot_HaxeError.prototype, {
	__class__: js__$Boot_HaxeError
});
class js_Boot {
	static __string_rec(o,s) {
		if(o == null) {
			return "null";
		}
		if(s.length >= 5) {
			return "<...>";
		}
		var t = typeof(o);
		if(t == "function" && (o.__name__ || o.__ename__)) {
			t = "object";
		}
		switch(t) {
		case "function":
			return "<function>";
		case "object":
			if(((o) instanceof Array)) {
				var str = "[";
				s += "\t";
				var _g3 = 0;
				var _g11 = o.length;
				while(_g3 < _g11) {
					var i = _g3++;
					str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
				}
				str += "]";
				return str;
			}
			var tostr;
			try {
				tostr = o.toString;
			} catch( e1 ) {
				var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
				return "???";
			}
			if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
				var s2 = o.toString();
				if(s2 != "[object Object]") {
					return s2;
				}
			}
			var str1 = "{\n";
			s += "\t";
			var hasp = o.hasOwnProperty != null;
			var k = null;
			for( k in o ) {
			if(hasp && !o.hasOwnProperty(k)) {
				continue;
			}
			if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
				continue;
			}
			if(str1.length != 2) {
				str1 += ", \n";
			}
			str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
			}
			s = s.substring(1);
			str1 += "\n" + s + "}";
			return str1;
		case "string":
			return o;
		default:
			return String(o);
		}
	}
}
js_Boot.__name__ = true;
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
Date.prototype.__class__ = Date;
Date.__name__ = "Date";
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
Darkmode.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
