// Generated by Haxe 4.2.2
(function ($global) { "use strict";
class Gitlab {
	constructor() {
		let _gthis = this;
		window.document.addEventListener("DOMContentLoaded",function(event) {
			$global.console.log("JsonP - Dom ready");
			_gthis.getData();
			_gthis.getRepos();
		});
	}
	getData() {
		let url = "https://api.github.com/users/MatthijsKamstra";
		utils_LoadJsonP.load(url,"JsonP.onCompleteHandler");
	}
	getRepos() {
		let url = "https://api.github.com/users/MatthijsKamstra/repos?page=1&per_page=100";
		utils_LoadJsonP.load(url,"JsonP.onTestCompleteHandler");
	}
	static main() {
		let app = new Gitlab();
	}
}
class haxe_iterators_ArrayIterator {
	constructor(array) {
		this.current = 0;
		this.array = array;
	}
	hasNext() {
		return this.current < this.array.length;
	}
	next() {
		return this.array[this.current++];
	}
}
class utils_LoadJsonP {
	static load(url,callback) {
		let script = window.document.createElement("script");
		if(callback != null) {
			let foo = url.indexOf("?") != -1 ? "&" : "?";
			script.src = "" + url + foo + "callback=" + callback;
		} else {
			script.src = "" + url;
		}
		window.document.head.appendChild(script);
		console.log("src/utils/LoadJsonP.hx:29:",script.src);
		script.onload = function(e) {
			$global.console.log(e);
			this.remove();
		};
	}
}
{
}
Gitlab.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
