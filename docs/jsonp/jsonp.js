// Generated by Haxe 4.0.5
(function ($hx_exports, $global) { "use strict";
class HxOverrides {
	static strDate(s) {
		switch(s.length) {
		case 8:
			var k = s.split(":");
			var d = new Date();
			d["setTime"](0);
			d["setUTCHours"](k[0]);
			d["setUTCMinutes"](k[1]);
			d["setUTCSeconds"](k[2]);
			return d;
		case 10:
			var k1 = s.split("-");
			return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
		case 19:
			var k2 = s.split(" ");
			var y = k2[0].split("-");
			var t = k2[1].split(":");
			return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
		default:
			throw new js__$Boot_HaxeError("Invalid date format : " + s);
		}
	}
}
HxOverrides.__name__ = true;
class JsonP {
	constructor() {
		var _gthis = this;
		window.document.addEventListener("DOMContentLoaded",function(event) {
			window.console.log("JsonP - Dom ready");
			_gthis.getData();
			_gthis.getRepos();
		});
	}
	getData() {
		var url = "https://api.github.com/users/MatthijsKamstra";
		JsonP.loadDataJsonP(url,"JsonP.onCompleteHandler");
	}
	getRepos() {
		var url = "https://api.github.com/users/MatthijsKamstra/repos?page=1&per_page=100";
		JsonP.loadDataJsonP(url,"JsonP.onTestCompleteHandler");
	}
	static onTestCompleteHandler(json) {
		window.console.log("onTestCompleteHandler");
		window.console.log(json);
		window.console.log(json.meta.Link[0][0]);
		window.console.log(json.meta.Link[0][1].rel);
		if(json.meta.Link[0][1].rel == "next") {
			JsonP.loadDataJsonP(json.meta.Link[0][0]);
		}
		var div = window.document.getElementById("container-jsonp-data");
		var html = div.innerHTML;
		html += "<ul>";
		var _g = 0;
		var _g1 = json.data.length;
		while(_g < _g1) {
			var i = _g++;
			var obj = json.data[i];
			var createdDate = HxOverrides.strDate(StringTools.replace(StringTools.replace(obj.created_at,"T"," "),"Z",""));
			console.log("src/JsonP.hx:44:",createdDate);
			if(obj.created_at == obj.updated_at) {
				continue;
			}
			if(obj.fork != true) {
				html += "<li><a href=\"" + obj.html_url + "\">" + obj.name + "</a>";
				if(obj.homepage != null) {
					html += " - <a href=\"" + obj.homepage + "\">homepage</a>";
				}
				html += "</li>";
			}
		}
		html += "</ul>";
		div.innerHTML = html;
	}
	static onCompleteHandler(json) {
		var div = window.document.getElementById("container-jsonp-data");
		window.console.log("onCompleteHandler");
		window.console.log(json);
		var html = "\n<div class=\"col-auto\">\n<img src=\"" + Std.string(json.data.avatar_url) + "\" class=\"rounded\"><br>\n</div>\n<div class=\"col-6\">\nName: " + Std.string(json.data.name) + "<br>\nBio: " + Std.string(json.data.bio) + "<br>\nPublic repos: " + Std.string(json.data.public_repos) + "<br>\nBlog: <a href=\"" + Std.string(json.data.blog) + "\" target=\"_blank\">Check out blog</a><br>\nRepos: <a href=\"" + Std.string(json.data.html_url) + "?tab=repositories\" target=\"_blank\">Check out repos</a><br>\n</div>\n";
		div.innerHTML = html;
	}
	static loadDataJsonP(url,callback) {
		var script = window.document.createElement("script");
		if(callback != null) {
			var foo = url.indexOf("?") != -1 ? "&" : "?";
			script.src = "" + url + foo + "callback=" + callback;
		} else {
			script.src = "" + url;
		}
		window.document.head.appendChild(script);
		script.onload = function(e) {
			this.remove();
		};
	}
	static main() {
		var app = new JsonP();
	}
}
$hx_exports["JsonP"] = JsonP;
JsonP.__name__ = true;
Math.__name__ = true;
class Std {
	static string(s) {
		return js_Boot.__string_rec(s,"");
	}
}
Std.__name__ = true;
class StringTools {
	static replace(s,sub,by) {
		return s.split(sub).join(by);
	}
}
StringTools.__name__ = true;
class js__$Boot_HaxeError extends Error {
	constructor(val) {
		super();
		this.val = val;
		if(Error.captureStackTrace) {
			Error.captureStackTrace(this,js__$Boot_HaxeError);
		}
	}
}
js__$Boot_HaxeError.__name__ = true;
class js_Boot {
	static __string_rec(o,s) {
		if(o == null) {
			return "null";
		}
		if(s.length >= 5) {
			return "<...>";
		}
		var t = typeof(o);
		if(t == "function" && (o.__name__ || o.__ename__)) {
			t = "object";
		}
		switch(t) {
		case "function":
			return "<function>";
		case "object":
			if(((o) instanceof Array)) {
				var str = "[";
				s += "\t";
				var _g3 = 0;
				var _g11 = o.length;
				while(_g3 < _g11) {
					var i = _g3++;
					str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
				}
				str += "]";
				return str;
			}
			var tostr;
			try {
				tostr = o.toString;
			} catch( e1 ) {
				var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
				return "???";
			}
			if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
				var s2 = o.toString();
				if(s2 != "[object Object]") {
					return s2;
				}
			}
			var str1 = "{\n";
			s += "\t";
			var hasp = o.hasOwnProperty != null;
			var k = null;
			for( k in o ) {
			if(hasp && !o.hasOwnProperty(k)) {
				continue;
			}
			if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
				continue;
			}
			if(str1.length != 2) {
				str1 += ", \n";
			}
			str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
			}
			s = s.substring(1);
			str1 += "\n" + s + "}";
			return str1;
		case "string":
			return o;
		default:
			return String(o);
		}
	}
}
js_Boot.__name__ = true;
String.__name__ = true;
Array.__name__ = true;
Date.__name__ = "Date";
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
JsonP.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, {});
