// Generated by Haxe 4.0.5
(function ($global) { "use strict";
class HxOverrides {
	static strDate(s) {
		switch(s.length) {
		case 8:
			var k = s.split(":");
			var d = new Date();
			d["setTime"](0);
			d["setUTCHours"](k[0]);
			d["setUTCMinutes"](k[1]);
			d["setUTCSeconds"](k[2]);
			return d;
		case 10:
			var k1 = s.split("-");
			return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
		case 19:
			var k2 = s.split(" ");
			var y = k2[0].split("-");
			var t = k2[1].split(":");
			return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
		default:
			throw new js__$Boot_HaxeError("Invalid date format : " + s);
		}
	}
}
HxOverrides.__name__ = true;
Math.__name__ = true;
class Weather {
	constructor() {
		this.daysOfTheWeek = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
		var _gthis = this;
		window.document.addEventListener("DOMContentLoaded",function(event) {
			window.console.log("Desktop - Dom ready");
			_gthis.init();
		});
	}
	init() {
		this.getElement();
		this.getData();
	}
	getData() {
		var urlSearch = "https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?query=amsterdam";
		var amsterdamID = "727232";
		var debugUrl = "api.json";
		this.loadData(debugUrl,$bind(this,this.onLoadCompleteHandler));
	}
	getElement() {
		this.weatherDiv = window.document.getElementById("weather");
	}
	onLoadCompleteHandler(data) {
		var json = JSON.parse(data);
		var arr = json.consolidated_weather;
		var _g = 0;
		var _g1 = arr.length;
		while(_g < _g1) {
			var i = _g++;
			var _WeatherObj = arr[i];
			console.log("src/Weather.hx:44:",_WeatherObj);
			var div = window.document.createElement("div");
			var date = HxOverrides.strDate(_WeatherObj.applicable_date);
			div.innerHTML = "<img src=\"https://www.metaweather.com/static/img/weather/" + _WeatherObj.weather_state_abbr + ".svg\" alt=\"" + _WeatherObj.weather_state_name + "\" width=\"30px\"> " + this.daysOfTheWeek[date.getDay()] + ",  min: " + Math.floor(_WeatherObj.min_temp) + "℃, max: " + Math.floor(_WeatherObj.max_temp) + "℃";
			this.weatherDiv.appendChild(div);
		}
	}
	loadData(url,callback) {
		var req = new XMLHttpRequest();
		req.onreadystatechange = function() {
			var tmp = this.readyState == 4 && this.status == 200;
		};
		req.onload = function() {
			var body = req.response;
			if(this.status == 200) {
				callback(body);
			}
		};
		req.onerror = function(error) {
			window.console.error("[JS] error: " + error);
		};
		req.open("GET",url);
		req.send();
	}
	static main() {
		var app = new Weather();
	}
}
Weather.__name__ = true;
Object.assign(Weather.prototype, {
	__class__: Weather
});
class js__$Boot_HaxeError extends Error {
	constructor(val) {
		super();
		this.val = val;
		if(Error.captureStackTrace) {
			Error.captureStackTrace(this,js__$Boot_HaxeError);
		}
	}
}
js__$Boot_HaxeError.__name__ = true;
Object.assign(js__$Boot_HaxeError.prototype, {
	__class__: js__$Boot_HaxeError
});
var $_;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
Date.prototype.__class__ = Date;
Date.__name__ = "Date";
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
Weather.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
